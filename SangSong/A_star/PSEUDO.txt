function A_star(start, goal):
    open_set = priority_queue()
    open_set.push(start, 0)
    came_from = {}
    g_score[start] = 0

    while open_set not empty:
        current = open_set.pop_lowest_f_score()
        if current == goal:
            return reconstruct_path(came_from, current)

        for neighbor in get_valid_neighbors(current):
            tentative_g_score = g_score[current] + 1
            if neighbor not in g_score or tentative_g_score < g_score[neighbor]:
                came_from[neighbor] = current
                g_score[neighbor] = tentative_g_score
                f_score = tentative_g_score + heuristic(neighbor)
                open_set.push(neighbor, f_score)

    return failure
